version: '3.8'

services:
  mongo:
    image: mongo
    env_file:
      - .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: the_database
    volumes:
      - ./backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
      - ./backend/mongo/mongo_data:/data/db
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'mongosh -u root -p example --eval \"!db.serverStatus().ok ? exit(1) : exit(0)\" || exit 1'"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
      start_interval: 5s
    container_name: mongo

  server:
    image: bloglist-backend
    build: 
      context: .
      dockerfile: ./backend/dockerfile
    env_file:
      - .env
    ports:
      - 3003:3003
    environment:
      - MONGO_URL=mongodb://${MONGO_DB_USER}:${MONGO_DB_PW}@mongo:27017/the_database
      - PORT=3003
    depends_on:
      mongo:
        condition: service_healthy
    container_name: server
  
  app:
    image: bloglist-frontend
    build: 
      context: .
      dockerfile: ./frontend/src/dockerfile
    environment:
      - REACT_APP_BACKEND_URL=http://localhost:8080
    ports:
      - 3000:80
    container_name: bloglist-frontend-con

  nginx:
    image: nginx:1.20.1
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:80
    container_name: reverse-proxy
    depends_on:
      - app
    restart: unless-stopped

    
    
    

        
      

        
