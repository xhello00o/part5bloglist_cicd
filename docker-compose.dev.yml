version: '3.8'

services:
  mongo:
    image: mongo
    ports:
      - 3456:27017
    env_file:
      - .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: the_database
    volumes:
      - ./backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
      - ./backend/mongo/mongo_data:/data/db
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'mongosh -u root -p example --eval \"!db.serverStatus().ok ? exit(1) : exit(0)\" || exit 1'"]
      start_period: 30s
      timeout: 10s
      retries: 3


  server:
    image: bloglist-backend-dev
    build: 
      context: .
      dockerfile: ./backend/dev.dockerfile
    env_file:
      - .env
    ports:
      - 3003:3003
    environment:
      - MONGO_URL=mongodb://${MONGO_DB_USER}:${MONGO_DB_PW}@mongo:27017/the_database
      - PORT=3003
    depends_on:
      mongo:
        condition: service_healthy
    volumes:
      - ./backend:/usr/src/app/backend
      - ./package.json:/usr/src/app/package.json
      - ./package-lock.json:/usr/src/app/package-lock.json
  
  app:
    image: bloglist-frontend-dev
    build: 
      context: .
      dockerfile: ./frontend/src/dev.dockerfile
    ports:
      - 3000:3000
    volumes:
      - ./frontend:/usr/src/app/frontend
      - ./package.json:/usr/src/app/package.json
      - ./package-lock.json:/usr/src/app/package-lock.json

    
    
    

        
      

        
